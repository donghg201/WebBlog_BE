package com.example.myproject_be.controller;import com.example.myproject_be.entity.document.Document;import com.example.myproject_be.service.DocumentService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@CrossOrigin(origins = "http://localhost:4200")@RequestMapping("api/document")public class DocumentController {    @Autowired    DocumentService documentService;    @GetMapping("/list")    public ResponseEntity<List<Document>> getAllDocuments() {        try {            List<Document> documentList = documentService.getDocument();            if (documentList == null) {                return new ResponseEntity<>(HttpStatus.NO_CONTENT);            }            return new ResponseEntity<>(documentList, HttpStatus.OK);        } catch (Exception e) {            e.printStackTrace();            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);        }    }    @DeleteMapping("/delete/{name}")    public ResponseEntity<Void> deleteDocument(@PathVariable("name") String name) {        try {            Document document = documentService.findDocumentByName(name);            if (document == null) {                return new ResponseEntity<>(HttpStatus.NOT_FOUND);            }            documentService.deleteDocument(name);            return new ResponseEntity<>(HttpStatus.OK);        } catch (Exception e) {            e.printStackTrace();            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);        }    }    @PostMapping("/create")    public ResponseEntity<Void> addDocument(@RequestBody Document document) {        try {            documentService.addDocument(document.getDocumentName(), document.getDocumentWriter(), document.getDescription());            return new ResponseEntity<>(HttpStatus.OK);        } catch (Exception e) {            System.out.println(e.getMessage());            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);        }    }    @GetMapping("/find/{name}")    public ResponseEntity<Document> findDocumentByName(@PathVariable("name") String name) {        try {            Document document = documentService.findDocumentByName(name);            if (document == null) {                return new ResponseEntity<>(HttpStatus.NO_CONTENT);            }            return new ResponseEntity<>(document, HttpStatus.OK);        } catch (Exception e) {            e.printStackTrace();            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);        }    }}